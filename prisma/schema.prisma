// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id      String           @id @default(cuid())
  name    String?
  email   String           @unique
  image   String?
  FavTour favoritesTours[] @relation(name: "userFav")

  bookings Booking[] @relation(name: "userBook")
}

model favoritesTours {
  TourId String
  tour   Tour   @relation(name: "favTour", fields: [TourId], references: [id])

  userEmail String
  user      User   @relation(name: "userFav", fields: [userEmail], references: [email])

  @@id([TourId, userEmail])
  @@index([TourId, userEmail])
}

model Options {
  id     String @id @default(cuid())
  tourId String
  tour   Tour   @relation(fields: [tourId], name: "tourOption", references: [id])

  name String
}

model Booking {
  id        String  @default(cuid())
  date      String
  email     String
  message   String
  UserEmail String?
  user      User?   @relation(name: "userBook", fields: [UserEmail], references: [email])

  TourId String
  tour   Tour   @relation(name: "tourBook", fields: [TourId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([email, TourId])
  @@index([email, TourId])
}

model Tour {
  id          String @id @default(cuid())
  title       String
  description String
  price       Int
  address     String
  city        String
  country     String

  image String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  booking Booking[]        @relation(name: "tourBook")
  FavTour favoritesTours[] @relation(name: "favTour")

  options Options[] @relation(name: "tourOption")

  @@unique(fields: [address, city, country])
}
